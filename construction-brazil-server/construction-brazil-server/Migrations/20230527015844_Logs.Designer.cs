// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using construction_brazil_server.DataStores;

#nullable disable

namespace construction_brazil_server.Migrations
{
    [DbContext(typeof(ConstructionBrazil_Context))]
    [Migration("20230527015844_Logs")]
    partial class Logs
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("construction_brazil_server.Entities.Logs.ApplicationLogging", b =>
                {
                    b.Property<long>("ApplicationLoggingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ApplicationLoggingId"));

                    b.Property<string>("ControllerName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset(7)")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<long?>("ExceptionLoggingId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LoggingTypeId")
                        .HasColumnType("bigint");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("MethodName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("ApplicationLoggingId");

                    b.HasIndex("CreatedOn");

                    b.HasIndex("ExceptionLoggingId");

                    b.HasIndex("LoggingTypeId");

                    b.ToTable("ApplicationLoggings", "dbo");
                });

            modelBuilder.Entity("construction_brazil_server.Entities.Logs.ExceptionLogging", b =>
                {
                    b.Property<long>("ExceptionLoggingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ExceptionLoggingId"));

                    b.Property<DateTimeOffset>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset(7)")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<string>("InnerExceptionMessage")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("StackTrace")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("ExceptionLoggingId");

                    b.HasIndex("Type", "CreatedOn");

                    b.ToTable("ExceptionLoggings", "dbo");
                });

            modelBuilder.Entity("construction_brazil_server.Entities.Logs.LoggingType", b =>
                {
                    b.Property<long>("LoggingTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("LoggingTypeId"));

                    b.Property<DateTimeOffset>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset(7)")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.HasKey("LoggingTypeId");

                    b.HasIndex("CreatedOn");

                    b.ToTable("LoggingTypes", "dbo");
                });

            modelBuilder.Entity("construction_brazil_server.Entities.Logs.ApplicationLogging", b =>
                {
                    b.HasOne("construction_brazil_server.Entities.Logs.ExceptionLogging", "ExceptionLogging")
                        .WithMany()
                        .HasForeignKey("ExceptionLoggingId");

                    b.HasOne("construction_brazil_server.Entities.Logs.LoggingType", "LoggingType")
                        .WithMany()
                        .HasForeignKey("LoggingTypeId");

                    b.Navigation("ExceptionLogging");

                    b.Navigation("LoggingType");
                });
#pragma warning restore 612, 618
        }
    }
}
